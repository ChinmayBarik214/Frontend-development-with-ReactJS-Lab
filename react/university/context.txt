1. import { createContext } from "react";

let LoginContext = createContext(
    {
        loginIn: false,
        setLoggedIn: () => {}
    }
)

export default LoginContext

2. App.jsx (Link context to state)
import LoginContext from './contexts/LoginContext'
   const [loggedIn, setLoggedIn] = useState(false)
    <>
      <LoginContext.Provider value={{loggedIn, setLoggedIn}}>
        <BrowserRouter>
          <Routes>
            <Route path='/' element={<DashboardPage />}></Route>
            <Route path='/login' element={<LoginPage />}></Route>
          </Routes>
        </BrowserRouter>
      </LoginContext.Provider>

3. import useContext

At start of functional component:
const loginContext = useContext(LoginContext)

Use state using loginContext.value



import { useContext, useState } from "react"
import axios from 'axios'
import loginContext from '../contexts/LoginContext'
import LoginContext from "../contexts/LoginContext"

function LoginPage() {
    const loginContext = useContext(LoginContext)
    const handleLogin = (e) => {
        e.preventDefault()

        axios.post(
            // (url, json data)
            'https://university.demoapi.xyz' + '/api/auth/local', // 
            {
                /* JSON data
                  // {
                    //  identifier: <>,
                    // password: <>
                  //}
                // admin panel > settings > roles > 
                */
                'identifier': username,
                'password': password
            }
        ).then(response => {
            console.log(response)
            loginContext.setLoggedIn(true)
        }).catch(error => {
            console.log(error)
        })

        console.log(username)
        console.log(password)
    }
    // States
    const [username, setUsername] = useState('frontenduser')
    const [password, setPassword] = useState('KRMU@123')
    return (
        <>
            <h1>My Login page</h1>
            <form onSubmit={handleLogin}>
                <div className="form_field">
                    <label htmlFor="username">Username</label>
                    <input
                        id="username"
                        type="text"
                        value={username}
                        onChange={(e) => { setUsername(e.target.value) }}
                    />
                </div>
                <div className="form_field">
                    <label htmlFor="password">Password</label>
                    <input
                        id="password"
                        type="password"
                        value={password}
                        onChange={(e) => { setPassword(e.target.value) }}
                    />
                </div>
                <div className="form_field">
                    <button type="submit">Login</button>
                </div>
            </form>
            <div>{loginContext.loggedIn ? 'Logged in as blabla  ' : 'Not logged in'}</div>
        </>
    )
}

export default LoginPage
